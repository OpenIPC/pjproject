#!/bin/sh
#

F="configure-hisi"

if test "$*" = "--help" -o "$*" = "-h"; then
  echo "$F [OPTIONS]"
  echo ""
  echo "  OPTIONS     Options that will be passed directly to"
  echo "              ./configure script. Run ./configure --help"
  echo "              for more info."
  exit 0
fi

# Find simulator argument
args=""


# TARGET_ARCH="arm"
# TARGET_ARCHEND="${TARGET_ARCH}le"
# TARGET_HOST="arm-buildroot-linux-uclibcgnueabi"
TARGET_HOST="arm-hisiv500-linux"

# BINARY_DIR=$(dirname $(echo $(which arm-buildroot-linux-uclibcgnueabi-gcc)))
BINARY_DIR=$(dirname $(echo $(which arm-hisiv500-linux-gcc)))
# STAGING_DIR=$BINARY_DIR/../arm-buildroot-linux-uclibcgnueabi/sysroot
# LIB_DIR=$STAGING_DIR/usr/lib

# RANLIB="arm-buildroot-linux-uclibcgnueabi-ranlib "
# CPP="arm-buildroot-linux-uclibcgnueabi-g++"
# CC="arm-buildroot-linux-uclibcgnueabi-gcc "
# LD="arm-buildroot-linux-uclibcgnueabi-ld "
# export LDFLAGS="$LDFLAGS -L${STAGING_DIR}/usr/lib -L${STAGING_DIR}/lib "

# HIMMP_INC="/tftpboot/nfs/v1/mpp2/include"
# HIMMP_LIB="/tftpboot/nfs/v1/mpp2/lib"
# HIMMP_INC="/tftpboot/nfs/sdk/mpp2/include"

if test "$CFLAGS" = ""; then
  # Default if no CFLAGS is set in env
  export CFLAGS=" -g -O2"
fi

# CHIP_VERSION=1
# if test "$CHIP_VERSION" = "1"; then
#   # Default if no CFLAGS is set in env
#   export CFLAGS=" -g -O2"
# fi
export CFLAGS="$CFLAGS -fPIC -DPJ_CONFIG_HISI=1 -DCHIP_VERSION=1 -I${HIMMP_INC}"
# export CFLAGS="$CFLAGS -std=gnu99 -fPIC -DPJ_CONFIG_HISI=1 -DCHIP_VERSION=1 -I${HIMMP_INC}"
export LDFLAGS="-L${HIMMP_LIB} "
# -DPJMEDIA_AUDIO_DEV_HAS_HISI_AUDIO=1 -DPJMEDIA_VIDEO_DEV_HAS_HISI_VIDEO=1 "
# -DPJMEDIA_HAS_VIDEO=1 -DPJMEDIA_HAS_H264_PASSTHROUGH_VID_CODEC=1"

FFMPEG_lib=$(pwd)/third_party/ffmpeg/hisilicon
# OH264_lib=$STAGING_DIR/usr
OH264_lib=$(pwd)/third_party/openh264/hisilicon

# Invoke configure
# ./configure --host=${TARGET_HOST} --target=${TARGET_HOST} --with-sysroot=${STAGING_DIR} --disable-oss $args
./configure --host=${TARGET_HOST} --target=${TARGET_HOST} --enable-memalign-hack \
    --enable-shared --prefix=$(pwd)/hisilicon/  --with-opus=${DEST}/opus \
    --disable-small-filter \
    --disable-bcg729  --disable-libwebrtc --disable-ffmpeg --disable-v4l2 \
    --disable-openh264 --disable-sdl --disable-gsm-codec  --disable-opencore-amr \
    --disable-speex-aec --disable-l16-codec \
    --disable-g722-codec --disable-g7221-codec \
     --disable-ilbc-codec --disable-speex-codec --disable-large-filter --disable-libyuv \
    $args
RETVAL=$?

# Write to pjsip.pri only if configure was successful
# if test $RETVAL -eq 0; then
# 	echo "# Config file to be included in app's .pro file" > pjsip.pri
# 	echo "# Auto-generated by 'configure-hisi $*'" >> pjsip.pri
# 	make -f hisi-config.mak >> pjsip.pri

# 	echo PJSIP config file for HiSilicon has been written to \'pjsip.pri\'. You can include this file from your application\'s .pro file.
# 	echo
# fi


